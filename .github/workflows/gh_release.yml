name: Android CI to GitHub release

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "master" ]
    tags: [ "v*" ]


jobs:
  buildApk:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build Apk
        run: ./gradlew assembleDebug
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/debug
          signingKeyBase64: ${{ secrets.DEBUG_SIGNING_KEY }}
          alias: ${{ secrets.DEBUG_ALIAS }}
          keyStorePassword: ${{ secrets.DEBUG_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.DEBUG_KEY_PASSWORD }}
        env:
          # override default build-tools version (29.0.3) -- optional
          BUILD_TOOLS_VERSION: "30.0.2"

      - uses: actions/upload-artifact@v2
        with:
          name: Signed apk
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - uses: actions/download-artifact@v1
        name: Download APK from build
        with:
          name: Signed apk


      - name: Build
        run: echo ${{ github.sha }} > Release.txt

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        tag_name: ${{ github.run_number }}
        #name: ${{ github.event.repository.name }} v${{ github.run_number }}
        with:
          files: |
            Release.txt
            ${{steps.sign_app.outputs.signedReleaseFile}}

#      - uses: actions/create-release@v1
#        name: Create GH Release
#        id: create_release
#        env:
#          GITHUB_TOKEN : ${{ secrets.GH_TOKEN }}
#        with:
#          tag_name: ${{ github.run_number }}
#          release_name: ${{ github.event.repository.name }} v${{ github.run_number }}
#
#      - uses: actions/upload-release-asset@v1.0.1
#        name: Upload Release APK
#        id: upload_release_asset
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: apk/app-debug.apk
#          asset_name: ${{ github.event.repository.name }}.apk
#          asset_content_type: application/zip

